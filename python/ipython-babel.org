* Note

  ipython babel works best for testing interactive magic commands, but there are problems
  when code blocks are copied into the babel session (in ipython these snippets need
  to get pasted using %paste or %cpaste).

  there is a discussion and a defadvice in this discussion
  http://emacs.stackexchange.com/questions/3859/working-setup-for-ipython-in-babel

  #+BEGIN_SRC emacs-lisp
; use %cpaste to paste code into ipython in org mode
(defadvice org-babel-python-evaluate-session
  (around org-python-use-cpaste
         (session body &optional result-type result-params) activate)
  "add a %cpaste and '--' to the body, so that ipython does the right thing."
  (setq body (concat "%cpaste -q \n" body "\n--"))
  ad-do-it
  )
#+END_SRC

* Example for using ipython magic commands

#+BEGIN_SRC python :results output
%timeit 1+1
#+END_SRC

#+RESULTS:
: >>> 100000000 loops, best of 3: 17.4 ns per loop
: >>> 


* Babel environment setup and ipython setup

Local Variables:
python-shell-virtualenv-path: "/home/dfeich/py-virtualenv/notebook"
org-babel-python-command: "/home/dfeich/py-virtualenv/notebook/bin/ipython --no-banner --classic --no-confirm-exit"
org-confirm-babel-evaluate: nil
org-export-babel-evaluate: nil
End:
